hash冲突
开放地址法：线性探测法hash(key)+i+1,+2,+3，
平方探测法hash(key)+i**2+1，+4，+ 9 ，
双散列探测法 hash(key)+i*hash(key)
链式解决法
再哈希法
建立公共溢出区
hadoop
2.1 hdfs
namenode
datanode
2.1.1namenode 如何启动
加载fsimage
加载edits
开始datareport，有了block（128MB）的位置

2.1.2 hdfs如何读数据，如何写数据


2.1.3 hdfs如何利用secondary node备份数据
edits滚动
复制fsimage和edits
形成新的fsimage.checkpoint
替换原来的fsimage




2.2 yarn
application master
resource manager
2.3 mapreduce

map统计分词后单词出现的数量
reduce 将一样的单词的数量汇总

B树

B+树
矮胖结构，主要是针对磁盘io的，克服了二叉查找树的磁盘寻址加载读取过多，
适合范围查找





B树



python垃圾回收
引用计数 gc.collect()，会有循环引用的问题
循环引用
https://www.jianshu.com/p/51bb714051ea

标记清除,1把活动对象打上标记 2把未标记对象清除

分代回收
数据库sql
找第k大
表分区类型
视图（View）是从一个或多个表（或视图）导出的表。视图与表（有时为与视图区别，也称表为基本表——Base Table）不同，视图是一个虚表，即视图所对应的数据不进行实际存储，数据库中只存储视图的定义，在对视图的数据进行操作时，系统根据视图的定义去操作与视图相关联的基本表

 6.hive
on hadoop 离线数据


7.hbase


8.elastic search
模糊查询

9.mongodb
mongo
collections
document




HashTable原理？扩容机制？
超过百分之75
将关键值key映射到地址，散列表

时间复杂度，空间复杂度？

什么是索引？
数据库中为了加快查找建立的结构，如果没有索引，查找会全表扫面
MYSQL数据库索引有哪些？
b+树，函数索引，bitmap，唯一索引，非唯一索引，单行索引，多行索引，哈希索引

聚集索引，非聚集索引 聚簇索引和非聚簇索引
聚集索引是B+树叶子结点存的是数据
非聚集索引是叶子结点存的是数据的索引，卫星数据
什么是组合索引？
基于多个列创建，可以节省空间 a b c会有ab ac
 abc三个索引

索引的底层实现？
b+树
B+树是什么，和二叉树有什么区别？
b+树更为矮胖，父节点的元素都出现在子节点中，最大元素在根结点中，每一个叶子结点都带有下一个元素的指针，形成一个有序链表，卫星数据在叶子节点中，
相比二叉树再索引时磁盘寻址次数少
为什么要用B+树而不用HashTable？B+树的优缺点？

数据库事务的隔离级别，解决了什么问题？解释一下脏读、不可重复读、幻读？
ACID

read uncommited 未提交读 最低级别
read commited 已提交读 语句级别，解决脏读可重复读 未解决幻读，事务级别，默认级别
可序列化，事务级别，都解决

脏读，一个事物处理中读取了另一个事务未提交的数据
不可重复读：一个事务在读取某些数据后的某些时间，再次读取这些数据，发现数据发生了变化

幻读，一个事物按相同条件查询以前检索过的数据，出现了新加入的数据

线程进程的区别？进程通信方式？线程同步方式？
一个程序至少一个进程，一个进程至少一个线程，
进程是操作系统进行资源分配和调度的一个独立单位，线程是进程的一个实体，是cpu调度和分派的基本单位
进程有独立的内存空间，线程没有
线程共享全局变量，静态变量，进程需要通过通信的方式
通信方式有匿名管道通信，消息队列，共享内存通信，
LRU算法描述一下？

hash表加双头链表
python的collections 的OrderedDict
TCP是什么？UDP是什么？
tcp是可靠传输
传输层的传输协议
腾讯聊天为什么要用UDP？（我不知道，让我猜一下...）
udp可以更有效的利用链路，
怎么理解可靠传输？靠什么来实现的？
tcp提供，点对点
三次握手，四次挥手，三次握手会有什么安全问题，四次挥手后的wait状态是？
ddos攻击
客户端发送连接请求，附带自己的seq序列值
服务端收到后回复客户端，回复客户端刚刚发送的seq值+1，和自己的seq值
客户到收到后回复客户端客户端刚刚发送的seq值，建立链接
四次挥手后等待确认time_wait时间知道ack服务器收到了，

什么是拥塞控制？描述一下机制？
防止发送方发送的太快，网络来不及处理，造成网络拥塞
慢开始，拥塞避免，快重传，快恢复
慢开始，拥塞 窗口为1，指数增大，超过慢开始门限以后开始，开始拥塞避免，就不加倍了，每次只加一，当出现超时时，慢开始门限设置为发送窗口的一版，再次慢开始

快重传，收到失序报文后立刻发送重复确认，不等到捎带
快恢复，连学收到三个确认后，直接从减半的cwnd门限开始拥塞避免



HTTP是什么？（还问了个H是什么？？？）
应用层的协议
HyperText  Transfer  Protocal超文本传输协议
http的一次过程，无状态的，所以有cookie技术 ，http/1.1的keep alive
https://zhuanlan.zhihu.com/p/38240894

get 和post的区别
https://www.zhihu.com/question/28586791
get url
post传参数用body
get是一个包
post是两个包



Python的GIL（什么东西，为什么有，在哪有，解决什么问题）
全局解释器锁，多线程问题，cpython里面的，使用多进程
Python字典的底层实现（哈希表，稀疏表，稀疏表的优化）
hash表
Python线程和协程的区别
线程共用全局变量和资源，协程不会，协程只是类似函数
线程需要曹祖系统内核切换，很耗费资源。而协程是用户定义的，yield/send
http://blog.guoyb.com/2016/07/03/python-coroutine/


一个线程有多个协程，协程仅仅是一个特殊的函数，线程内多个协程是串行执行的
Mysql索引（B+树）

父节点的值都包含在子节点，是子节点的最大值，只有叶子节点才存数据，其他都是索引，叶子节点只想临近的特子节点，形成有序链表
对于其他数据结构做索引的优势（哈希表，二叉树，B树）
磁盘io寻址次数少，适合范围查询
一个Mysql操作很慢，怎样排查原因。（设置慢查询时间，查询慢查询日志，explain查看慢的sql语句的查询情况）
一个联合索引(a,b,c)，where b=.. and c=....走不走索引？为什么？哪些走索引？
需要第一列，才会走索引

9. redis基本数据结构
sudo service redis-server start
cuiruiwmfq_gmail_com@instance-1:~$ redis-cli

redis-cli
key-value
string
list
hash
set
zset
10. redis有序集合的底层实现（ziplist和skiplist，跳跃表是什么）

11. https知道吗（只知道是加密传输）
http 和ssl
非对称加密和对称加密
https://zhuanlan.zhihu.com/p/43789231


14. 常见排序算法(快排，堆排序)
冒泡排序，归并排序，快速排序，堆排序，希尔排序，桶排序

15. 快排的时间复杂度，最坏的时候也是NlogN?

16. 谈谈REST API的规范

synchronized与volatile区别？




redis的单点问题怎么解决？

场景题:两千万数据，取最大的一千个
top k



主键跟索引的区别

最大不重复子串
使用排序字典



华为一面
python的match和search
match是前缀匹配，search是全局匹配


python运算符有哪些，
计算运算符，比较运算符，逻辑运算符，赋值运算符，位运算符，成员运算符。

爬虫相关 restfulapi
curl
wget

一篇文档找出现频数前几高的词
，hash+最小堆（top k）


一堆ip区域，找某个ip是否存在


多线程（怎么创建新线程，怎么数据共享，线程状态）



虚拟内存
https://blog.csdn.net/qq_21125183/article/details/80570585
vr经过mmu变成物理缓存，lru
页命中，缺页



python read/readline/readlines的区别
read读进一整个字符串，
readline是一行一行的。
readlines是区分了行的所有数据

OSI七层，数据链路层传输单位

物理层：比特流
数据链路层：帧
网络层：包
传输层：报文 tcp ip
上面的表示层、会话层、应用层实际上都在传输层的基础上对数据进行不同的应用 比如控制、加密、数据交换格式、用户接口。所以高层传输的都是报文


数据链路层和数据传输层的校验方法的区别


长连接和短连接及适用情况
长轮询和短轮询
tcp长连接，http1.1的头是keep alive，为了多次复用
https://www.jianshu.com/p/3fc3646fad80

4次挥手大量Time_wait的解决方法


说说LVS调度算法，优缺点

乐观锁，悲观锁


数据库如何在读时确保数据时最新的，
消息队列，redis-key


socket客户端和服务端通信过程





cache和buffer的区别
https://www.zhihu.com/question/26190832

同步和异步的区别
同步是顺序的方式，需要等待，比如用户登录的验证
异步是不需要等待的，比如页面数据加载，是一种并行的执行方式


你有用过synchronized吗


网络
http首部有什么
答：状态码 他说不是 我就改口说了cookie
cookie有什么用
答：实现下session
session怎么实现
答：seesion id
session id存在哪呢
答：或许是服务器的一个文件
要是很多个服务器那怎么办
答：或许放数据库里了吧
放数据库吞吐量有多少
答：瞎说几万几十万
除了SQL注入还有什么常见攻击
答：bzd（xss，cspf）


第一次握手服务器调用了什么函数
答：或许是accept

第二次握手发出去了时候 服务器在干嘛
答：下班了吧这么晚了 我怎么知道










动态链接和静态链接

动态链接是相对于静态链接而言的。所谓静态链接是指把要调用的函数或者过程链接到可执行文件中，成为可执行文件的一部分。换句话说，函数和过程的代码就在程序的exe文件中，该文件包含了运行时所需的全部代码。当多个程序都调用相同函数时，内存中就会存在这个函数的多个拷贝，这样就浪费了宝贵的内存资源。而动态链接所调用的函数代码并没有被拷贝到应用程序的可执行文件中去，而是仅仅在其中加入了所调用函数的描述信息（往往是一些重定位信息）。仅当应用程序被装入内存开始运行时，在Windows的管理下，才在应用程序与相应的DLL之间建立链接关系。当要执行所调用DLL中的函数时，根据链接产生的重定位信息，Windows才转去执行DLL中相应的函数代码。一般情况下，如果一个应用程序使用了动态链接库，Win32系统保证内存中只有DLL的一份复制品

HashMap是不是线程安全
不是
hashtable和concurrenthashmap是

分布式锁


一致性哈希


如何保持数据库和缓存的一致性
消息队列，

mysql的锁
乐观锁，悲观锁（共享锁，排他锁）
行级锁，间隙锁



分布式数据过大的优化

Git


负数的补码

python的format的使用


滚动hash

kmp算法字符串匹配的

操作系统的银行家系统

装饰器的定义
方便的包装函数

tcp ip五层


flask和diango的区别
django提供一站式的解决方案，
路由上django是集中处理，利用正则匹配，而flask是更多的使用装饰器


